/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


/**
 *
 * @author MIAN
 */

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import dao.ConnectionProvider;
import java.io.FileOutputStream;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class ReportFrame extends javax.swing.JFrame {

    /**
     * Creates new form ReportFrame
     */
    public ReportFrame() {
        initComponents( );
        btnExportPDF = new javax.swing.JButton();
btnExportPDF.setFont(new java.awt.Font("Segoe UI", 1, 14));
btnExportPDF.setText("Export to PDF");
btnExportPDF.addActionListener(evt -> btnExportPDFActionPerformed(evt));
getContentPane().add(btnExportPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 550, 140, 50));

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ShowDaily = new javax.swing.JButton();
        ShowWeekly = new javax.swing.JButton();
        ShowMonthly = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrdersTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Total = new javax.swing.JTextPane();
        btnExportPDF = new javax.swing.JButton();
        backgroundPic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnClose.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 560, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sales Report");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 190, 70));

        ShowDaily.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ShowDaily.setForeground(new java.awt.Color(51, 51, 51));
        ShowDaily.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Daily Icon.png"))); // NOI18N
        ShowDaily.setText("Daily");
        ShowDaily.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ShowDaily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowDailyActionPerformed(evt);
            }
        });
        getContentPane().add(ShowDaily, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 130, 50));

        ShowWeekly.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ShowWeekly.setForeground(new java.awt.Color(51, 51, 51));
        ShowWeekly.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Weekly Icon.png"))); // NOI18N
        ShowWeekly.setText("Weekly");
        ShowWeekly.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ShowWeekly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowWeeklyActionPerformed(evt);
            }
        });
        getContentPane().add(ShowWeekly, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 130, 50));

        ShowMonthly.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ShowMonthly.setForeground(new java.awt.Color(51, 51, 51));
        ShowMonthly.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Monthly Icon.png"))); // NOI18N
        ShowMonthly.setText("Monthly");
        ShowMonthly.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ShowMonthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowMonthlyActionPerformed(evt);
            }
        });
        getContentPane().add(ShowMonthly, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 130, 50));

        OrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "Total"
            }
        ));
        jScrollPane1.setViewportView(OrdersTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 500, 330));

        Total.setEditable(false);
        Total.setBackground(new java.awt.Color(255, 255, 255));
        Total.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Total.setText("Total:");
        jScrollPane2.setViewportView(Total);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 490, 170, 70));

        btnExportPDF.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExportPDF.setText("Export PDF");
        btnExportPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportPDFActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 530, 110, 30));

        backgroundPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/View_Sales_Background.png"))); // NOI18N
        getContentPane().add(backgroundPic, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>                        

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        setVisible(false);
    }                                        

    private void ShowWeeklyActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    DefaultTableModel model = (DefaultTableModel) OrdersTable.getModel();
    model.setRowCount(0); // Clear previous data

    String query = "SELECT WEEK(STR_TO_DATE(orderDate, '%d-%m-%Y')) AS week, " +
                   "YEAR(STR_TO_DATE(orderDate, '%d-%m-%Y')) AS year, " +
                   "SUM(totalPaid) AS total " +
                   "FROM orderDetail " +
                   "GROUP BY WEEK(STR_TO_DATE(orderDate, '%d-%m-%Y')), YEAR(STR_TO_DATE(orderDate, '%d-%m-%Y'))";
    try (Connection con = ConnectionProvider.getCon(); Statement st = con.createStatement(); ResultSet rs = st.executeQuery(query)) {
        int totalAmount = 0;
        while (rs.next()) {
            String week = "Week " + rs.getString("week") + ", " + rs.getString("year");
            model.addRow(new Object[] { rs.getString("week"), week, rs.getInt("total") });
            totalAmount += rs.getInt("total");
        }
        Total.setText("Total: ₱ " + totalAmount);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }




    }                                          

    private void ShowMonthlyActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        
    DefaultTableModel model = (DefaultTableModel) OrdersTable.getModel();
    model.setRowCount(0); // Clear previous data

    String query = "SELECT YEAR(STR_TO_DATE(orderDate, '%d-%m-%Y')) AS year, " +
                   "MONTH(STR_TO_DATE(orderDate, '%d-%m-%Y')) AS month, " +
                   "SUM(totalPaid) AS total " +
                   "FROM orderDetail " +
                   "GROUP BY year, month " +
                   "ORDER BY year, month";
    try (Connection con = ConnectionProvider.getCon(); Statement st = con.createStatement(); ResultSet rs = st.executeQuery(query)) {
        int totalAmount = 0;
        while (rs.next()) {
            String period = "Year: " + rs.getString("year") + ", Month: " + rs.getString("month");
            model.addRow(new Object[] { rs.getString("month"), period, rs.getInt("total") });
            totalAmount += rs.getInt("total");
        }
        Total.setText("Total: ₱ " + totalAmount);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }





    }                                           

    private void ShowDailyActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        
    DefaultTableModel model = (DefaultTableModel) OrdersTable.getModel();
    model.setRowCount(0); // Clear previous data

    String query = "SELECT orderDate, SUM(totalPaid) AS total FROM orderDetail GROUP BY orderDate";
    try (Connection con = ConnectionProvider.getCon(); Statement st = con.createStatement(); ResultSet rs = st.executeQuery(query)) {
        int totalAmount = 0;
        while (rs.next()) {
            model.addRow(new Object[] { rs.getString("orderDate"), rs.getString("orderDate"), rs.getInt("total") });
            totalAmount += rs.getInt("total");
        }
        Total.setText("Total: ₱ " + totalAmount);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }


    }                                         

    private void btnExportPDFActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        
    Document document = new Document();
    try {
        PdfWriter.getInstance(document, new FileOutputStream("SalesReport.pdf"));
        document.open();

        // Add Title
        document.add(new Paragraph("Sales Report", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18)));
        document.add(new Paragraph("\n"));

        // Add Table to PDF
        PdfPTable pdfTable = new PdfPTable(3);
        pdfTable.addCell("ID");
        pdfTable.addCell("Date/Period");
        pdfTable.addCell("Total Paid");

        DefaultTableModel model = (DefaultTableModel) OrdersTable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            pdfTable.addCell(model.getValueAt(i, 0).toString());
            pdfTable.addCell(model.getValueAt(i, 1).toString());
            pdfTable.addCell(model.getValueAt(i, 2).toString());
        }

        document.add(pdfTable);
        document.add(new Paragraph("\nTotal: " + Total.getText()));

        JOptionPane.showMessageDialog(this, "PDF Generated Successfully!");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    } finally {
        document.close();
    }

    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTable OrdersTable;
    private javax.swing.JButton ShowDaily;
    private javax.swing.JButton ShowMonthly;
    private javax.swing.JButton ShowWeekly;
    private javax.swing.JTextPane Total;
    private javax.swing.JLabel backgroundPic;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnExportPDF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration                   
}
